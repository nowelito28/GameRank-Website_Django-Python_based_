"""
Django settings for GameRank project.

Generated by 'django-admin startproject' using Django 5.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""
import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-$2l*th=bzx%0b*j03q#fupz-q*fo)kk+zcj5rwi_u#nj-u3fn@'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# Servidores/direcciones/dominios permitidos para despligue web:
ALLOWED_HOSTS = ['127.0.0.1', 'localhost', 'noelito.pythonanywhere.com']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'games.apps.GamesConfig',  # Incluir app games -> con nueva base de datos en sqlite3 -> declarada en games/apps.py
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    # Middleware que revisa cabecera Accept-Language del navegador -> usa el idioma adecuado si está en LANGUAGES:
    'django.middleware.locale.LocaleMiddleware',
    # Incluir middleware PasswordMiddleware de games -> verifica sesión global (no de cada user):
    'games.middleware.PasswordMiddleware',
]

ROOT_URLCONF = 'GameRank.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],  # Permite crear directorios 'templates' globales en las apps
        'APP_DIRS': True,  # Indica a Django que busque los templates en el directorio 'templates' de cada app
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'games.context_processors.stats',  # Context processor -> permite renderizar variables en las plantillas automáticamente -> .py a parte en games
            ],
        },
    },
]

WSGI_APPLICATION = 'GameRank.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',  # Ruta de la base de datos
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

# Requisitos para crear un user -> register:
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

# Django mostrará los textos en inglés (de EE.UU.) si no se detecta otro idioma preferido por el navegador o user:
# Idioma por defecto del proyecto:
LANGUAGE_CODE = 'en-us'

# Zona horaria del proyecto por defecto (como se guarda en la base de datos) -> Madrid:
# Utiliza UTC -> coordinated universal time
TIME_ZONE = 'Europe/Madrid'

# Activar internacionalización -> traducciones de Django -> (gettext, {% trans %}, etc.):
USE_I18N = True
# Activar la localización de Django -> Formatea fechas, números, etc => siguiendo las reglas del idioma/región activa:
# ¡¡¡SOLO EN LOS TEMPLATES!!!
USE_L10N = True
# Soporte para zonas horarias (UTC) -> guarda todos los DateTimeField en UTC internamente
USE_TZ = True

# Idiomas que soporta Django:
# Si el navegador pide idioma que no está en LANGUAGES -> Django usará LANGUAGE_CODE = 'en-us' como fallback
LANGUAGES = [
    ('en', 'English'),
    ('es', 'Spanish'),
]

# Paths locales -> Ruta donde Django buscará los archivos .po y .mo de traducciones:
# ej -> makemessages -l es -> los archivos se guardarán en locale/es/LC_MESSAGES/
LOCALE_PATHS = [BASE_DIR / 'locale']


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'  # Ruta a la carpeta de archivos estáticos

# IMPORTANTE: Los archivos estáticos se encuentran en el directorio 'static' del proyecto
STATICFILES_DIRS = [
    BASE_DIR / "static",  # Path al directorio de archivos estáticos
]

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
